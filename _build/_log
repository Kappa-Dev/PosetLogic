### Starting build.
# Target: main.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules main.ml > main.ml.depends # cached
# Target: domain.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:domain.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules domain.mli > domain.mli.depends # cached
# Target: event.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:event.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules event.mli > event.mli.depends # cached
# Target: event.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:event.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o event.cmi event.mli # cached
# Target: poset.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:poset.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules poset.mli > poset.mli.depends # cached
# Target: poset.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:poset.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o poset.cmi poset.mli # cached
# Target: domain.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:domain.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o domain.cmi domain.mli # cached
# Target: formulas.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:formulas.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules formulas.mli > formulas.mli.depends # cached
# Target: formulas.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:formulas.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o formulas.cmi formulas.mli # cached
# Target: lexer.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:lexer.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o lexer.cmo lexer.ml # cached
# Target: Parameter.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:Parameter.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules Parameter.ml > Parameter.ml.depends # cached
# Target: Parameter.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:Parameter.cmo, file:Parameter.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o Parameter.cmo Parameter.ml # cached
# Target: main.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o main.cmo main.ml # cached
# Target: domain.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:domain.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules domain.ml > domain.ml.depends # cached
# Target: domain.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:domain.cmo, file:domain.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o domain.cmo domain.ml # cached
# Target: event.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:event.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules event.ml > event.ml.depends # cached
# Target: event.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:event.cmo, file:event.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o event.cmo event.ml # cached
# Target: formulas.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:formulas.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules formulas.ml > formulas.ml.depends # cached
# Target: lib.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:lib.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules lib.mli > lib.mli.depends # cached
# Target: lib.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:lib.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o lib.cmi lib.mli # cached
# Target: morphism.mli.depends, tags: { package(yojson), bin_annot, extension:mli, file:morphism.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules morphism.mli > morphism.mli.depends # cached
# Target: morphism.cmi, tags: { package(yojson), bin_annot, byte, compile, extension:mli, file:morphism.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o morphism.cmi morphism.mli # cached
# Target: formulas.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:formulas.cmo, file:formulas.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o formulas.cmo formulas.ml # cached
# Target: parser.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o parser.cmo parser.ml # cached
# Target: poset.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:poset.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules poset.ml > poset.ml.depends # cached
# Target: poset.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:poset.cmo, file:poset.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o poset.cmo poset.ml # cached
# Target: lib.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:lib.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules lib.ml > lib.ml.depends # cached
# Target: lib.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:lib.cmo, file:lib.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o lib.cmo lib.ml # cached
# Target: morphism.ml.depends, tags: { package(yojson), bin_annot, extension:ml, file:morphism.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -modules morphism.ml > morphism.ml.depends # cached
# Target: morphism.cmo, tags: { package(yojson), bin_annot, byte, compile, extension:cmo, extension:ml, file:morphism.cmo, file:morphism.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -bin-annot -package yojson -o morphism.cmo morphism.ml # cached
# Target: main.byte, tags: { package(yojson), bin_annot, byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package yojson Parameter.cmo event.cmo lib.cmo poset.cmo domain.cmo morphism.cmo formulas.cmo parser.cmo lexer.cmo main.cmo -o main.byte # cached
# Compilation successful.
